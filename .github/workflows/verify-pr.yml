name: Verify PR

on:
  pull_request:
    branches: [ main ]

jobs:
  detect-changes:
    name: Detect changes
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: read

    outputs:
      src: ${{ steps.filter.outputs.src }}
      screenshots: ${{ steps.filter.outputs.screenshots }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            src:
              - '**/*.{js,ts,jsx,tsx,mjs,mts,css}'
              - '**/src/**.json'
              - '**/src/**.yaml'
              - '**/*tsconfig.json'
              - '**/*package.json'
              - 'pnpm-lock.yaml'
            screenshots:
              - '**/__screenshots__/**'
              - '**/*playwright*.ts'

  lint:
    name: Lint
    runs-on: ubuntu-latest

    needs: detect-changes
    if: needs.detect-changes.outputs.src == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Run linter
        run: pnpm exec turbo lint

  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest

    needs: detect-changes
    if: needs.detect-changes.outputs.src == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Run unit tests
        run: pnpm exec turbo test:unit

  screen-test:
    name: Screen tests
    runs-on: macos-latest

    needs: detect-changes
    if: needs.detect-changes.outputs.src == 'true' || needs.detect-changes.outputs.screenshots == 'true'

    strategy:
      matrix:
        package:
          - packages/ui-kit
          - packages/synth
          - packages/editor
          - apps/synth-playground

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Run screen tests
        working-directory: ${{ matrix.package }}
        run: pnpm exec turbo test:screen

      - name: Prepare report artifact name
        id: prepare-report-artifact
        if: ${{ !cancelled() }}
        run: echo "name=${{ matrix.package }}" | sed 's|/|--|g' >> "$GITHUB_OUTPUT"

      - name: Upload report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: ${{ steps.prepare-report-artifact.outputs.name }}-playwright-report
          path: ${{ matrix.package }}/playwright-report/
          retention-days: 30

  verify-pr:
    name: Verify PR
    runs-on: ubuntu-latest
    if: always()

    needs:
      - lint
      - unit-test
      - screen-test

    steps:
      - name: Check completed jobs
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-skips: ${{ toJSON(needs) }}
