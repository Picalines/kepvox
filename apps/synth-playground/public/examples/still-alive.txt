import { GeneratorSynthNode, GainSynthNode, Time as T, Factor, Pitch, PitchNotation } from 'synth'
import { context } from 'synth/playground'

const generator = new GeneratorSynthNode(context, { maxPolyphony: 16 })
const gain = new GainSynthNode(context)

generator.connect(gain)
gain.connect(context.output)

generator.waveShape.value = 'triangle'
generator.attack.initialValue = T.sixteenth.toNotes()
generator.release.initialValue = T.eighth.toNotes()

gain.factor.initialValue = Factor.orClamp(0.5)

const play = (time: T, note: PitchNotation, duration: T) => {
    generator.attackAt(time, Pitch.frequency(note))
    generator.releaseAt(time.add(duration), Pitch.frequency(note))
}

// "Still alive" Â© Valve
const notes: [PitchNotation | null, T][] = [
    ['C4',  T.quarter],
    ['F4',  T.quarter],
    ['E4',  T.eighth],
    ['D4',  T.eighth],
    ['D4',  T.eighth],
    ['C4',  T.eighth],
    ['D4',  T.eighth],
    ['C4',  T.eighth],
    ['C4',  T.quarter],
    ['C4',  T.eighth],
    [null,  T.eighth],
    ['A3',  T.eighth],
    ['A#3', T.eighth],
    ['C4',  T.quarter],
    ['F4',  T.quarter],
    ['G4',  T.eighth],
    ['F4',  T.eighth],
    ['E4',  T.eighth],
    ['D4',  T.eighth],
    ['D4',  T.eighth],
    ['E4',  T.eighth],
    ['F4',  T.quarter],
    ['F4',  T.eighth],
    [null,  T.eighth],
    ['G4',  T.eighth],
    ['A4',  T.eighth],
    ['A#4', T.eighth],
    ['A#4', T.eighth],
    ['A4',  T.quarter],
    ['G4',  T.quarter],
    ['F4',  T.eighth],
    ['G4',  T.eighth],
    ['A4',  T.eighth],
    ['A4',  T.eighth],
    ['G4',  T.quarter],
    ['F4',  T.quarter],
    ['D4',  T.eighth],
    ['C4',  T.eighth],
    ['D4',  T.eighth],
    ['F4',  T.eighth],
    ['F4',  T.eighth],
    ['E4',  T.quarter],
    ['E4',  T.eighth],
    ['F#4', T.eighth],
    ['F#4', T.quarter],
]

let time = T.start
for (const [note, duration] of notes) {
    if (note !== null) {
        play(time, note, duration)
    }
    time = time.add(duration)
}
